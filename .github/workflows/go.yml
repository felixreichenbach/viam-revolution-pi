# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
  release:
    types: [published]
  pull_request_target:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        runner: [ ubuntu-latest ]
        arch: [ arm64 ]
    runs-on: ${{ matrix.runner }}
    env:
      os: ${{contains(matrix.runner, 'ubuntu') && 'linux' || contains(matrix.runner, 'macos') && 'macos' || 'unknown'}}
      GOOS: ${{contains(matrix.runner, 'ubuntu') && 'linux' || contains(matrix.runner, 'macos') && 'darwin' || 'unknown'}}
      GOARCH: ${{ matrix.arch }}
    steps:
    - name: Check out code
      if: github.event_name != 'pull_request_target'
      uses: actions/checkout@v3

    - name: Check out PR branch code
      if: github.event_name == 'pull_request_target'
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build linux arm64
      run: go build -o viam-revolution-pi -v .

    - name: Package
      run: tar -zcf viam-revolution-pi-${{ env.os }}-${{ matrix.arch }}.tar.gz viam-revolution-pi
    
    - uses: actions/upload-artifact@v3
      with:
        name: viam-revolution-pi-${{ env.os }}-${{ matrix.arch }}
        path: viam-revolution-pi-${{ env.os }}-${{ matrix.arch }}.tar.gz

  test:
    strategy:
      matrix:
        runner: [ ubuntu-latest ]
        arch: [ arm64 ]
    runs-on: ${{ matrix.runner }}
    env:
      os: ${{contains(matrix.runner, 'ubuntu') && 'linux' || contains(matrix.runner, 'macos') && 'macos' || 'unknown'}}
      GOOS: ${{contains(matrix.runner, 'ubuntu') && 'linux' || contains(matrix.runner, 'macos') && 'darwin' || 'unknown'}}
      GOARCH: ${{ matrix.arch }}
    steps:
    - name: Check out code
      if: github.event_name != 'pull_request_target'
      uses: actions/checkout@v3

    - name: Check out PR branch code
      if: github.event_name == 'pull_request_target'
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    - name: Test
      run: go test -v ./...

  publish:
    strategy:
      matrix:
        runner: [ ubuntu-latest ]
        arch: [ arm64 ]
    runs-on: ${{ matrix.runner }}
    needs: [build, test]
    env:
      os: ${{contains(matrix.runner, 'ubuntu') && 'linux' || contains(matrix.runner, 'macos') && 'macos' || 'unknown'}}
      GOOS: ${{contains(matrix.runner, 'ubuntu') && 'linux' || contains(matrix.runner, 'macos') && 'darwin' || 'unknown'}}
      GOARCH: ${{ matrix.arch }}
    if: github.event_name == 'release'
    steps:
    - name: Check out code
      if: github.event_name != 'pull_request_target'
      uses: actions/checkout@v3

    - name: Check out PR branch code
      if: github.event_name == 'pull_request_target'
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - uses: actions/download-artifact@v3
      with:
        name: viam-revolution-pi-${{ env.os }}-${{ matrix.arch }}
    - name: Upload
      uses: viamrobotics/upload-module@main
      with:
        module-path: viam-revolution-pi-${{ env.os }}-${{ matrix.arch }}.tar.gz
        namespace: viam-labs
        platform: ${{ env.os }}/${{ matrix.arch }}
        version: ${{ github.ref_name }}
        cli-config-secret: ${{ secrets.cli_config }}
